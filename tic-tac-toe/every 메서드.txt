every 메서드는 반복문의 일종으로 요소를 순회하면서,
조건 함수의 반환값이 모두 true이면 every 메서드도 true를 반환합니다.
조건 함수의 반환값이 하나라도 false이면 every 메서드의 반환값도 false가 됩니다.

every 메서드는 일반 반복문보다 더 효율적입니다.
일반 반복문을 사용할 때는 직접 멈추지 않으면 끝까지 탐색하지만,
every는 조건에 만족하지 않는 요소를 하나라도 찾으면 바로 반복을 중단합니다.

일차원 배열에서 밖에 못쓴다!

every와 반대 역할을 하는 메서드는 "some 메서드"...

공식 정의
every() 메서드는 배열 안의 모든 요소가 주어진 판별 함수를 통과하는지 테스트합니다.
Boolean 값을 반환합니다.


공식 구문
배열.every(조건함수);
every((element) => { ... } )
every((element, index) => { ... } )
every((element, index, array) => { ... } )


매개변수
1. callbackFn
각 요소를 시험할 함수. 다음 세 가지 인수를 받습니다.

  1-1) element
  배열에서 처리되는 현재 요소

  1-2) index
  처리할 현재 요소의 인덱스

  1-3) array
  every를 호출한 배열

2. thisArg (Optional)
callbackFn을 실행할 때 this로 사용하는 값.


ex) tic-tac-toe 예제에서 무승부일때... (text가 전부 차있을때)

rows.flat().every((td) => td.textContent)
// true

rows.flat().every((td) => !td.textContent)
// false