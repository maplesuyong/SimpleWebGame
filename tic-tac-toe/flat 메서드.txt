배열의 차원을 낮추는 메서드로, n차원 배열을 n-1차원 배열로 낮춥니다.
이차원 배열이라면 일차원 배열로 바뀝니다.
일차원 배열은 flat을 적용해도 그대로 일차원 배열로 남아 있습니다.


공식 구문
const newArr = arr.flat([depth])


매개변수
depth : 중첩 배열 구조를 평탄화할 때 사용할 깊이 값. 기본값은 1입니다


반환값
하위 배열을 이어붙인 새로운 배열


ex1)  2차원 -> 1차원
const array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];
array.flat();
// [1, 2, 3, 4, 5, 6, 7, 8, 9]


ex2)  1차원 안의 2차원을 1차원으로
const array2 = [1, 2, 3, [[4, 5, 6], [7, 8, 9]]];
array2.flat();
// [1, 2, 3, [4, 5, 6], [7, 8, 9]]


ex3)  1차원 안의 1차원을 0차원으로
const arr1 = [1, 2, [3, 4]];
arr1.flat(); // [1, 2, 3, 4]


ex4)  ex2와 동일
const arr2 = [1, 2, [3, 4, [5, 6]]];
arr2.flat();
// [1, 2, 3, 4, [5, 6]]


ex5)  매개변수 depth가 2이므로 flat을 2번 적용한 결과와 같음
const arr3 = [1, 2, [3, 4, [5, 6]]];
arr3.flat(2);
// [1, 2, 3, 4, 5, 6]


ex6)  매개변수 depth가 무한이므로 모두 1차원으로 
const arr4 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];
arr4.flat(Infinity);
// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


ex7)  flat은 배열의 구멍도 제거한다
const arr5 = [1, 2, , 4, 5];
arr5.flat();
// [1, 2, 4, 5]